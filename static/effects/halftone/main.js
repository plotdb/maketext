// Generated by LiveScript 1.3.0
var ret;
ret = {
  name: '',
  desc: '',
  tags: '',
  slug: '',
  init: function(){},
  edit: {
    color1: {
      name: 'color1',
      type: 'color',
      'default': '#0ff'
    },
    color2: {
      name: 'color2',
      type: 'color',
      'default': '#f0f'
    },
    color3: {
      name: 'color3',
      type: 'color',
      'default': '#ff0'
    },
    size: {
      name: "Dot Size",
      type: 'number',
      'default': 1.8,
      min: 0,
      max: 6,
      step: 0.1
    },
    spacing: {
      name: "Dot Spacing",
      type: 'number',
      'default': 2,
      min: 0,
      max: 2,
      step: 0.1
    },
    direction: {
      name: 'direction',
      type: 'number',
      'default': 90,
      min: 0,
      max: 360,
      step: 1
    }
  },
  watch: function(n, o, node){
    var r, p, d, c, x$, angle, dx, dy, ref$, x1, y1, x2, y2, y$;
    Array.from(node.querySelectorAll('stop')).map(function(d, i){
      if (n["color" + (3 - i)] != null) {
        return d.setAttribute('stop-color', n["color" + (3 - i)]);
      }
    });
    r = n.size || 3;
    p = n.spacing != null ? n.spacing : 1;
    d = r * 2 + p;
    c = r + p * 0.5;
    x$ = node.querySelector('feImage');
    x$.setAttributeNS('http://www.w3.org/1999/xlink', 'href', "data:image/svg+xml;base64," + btoa("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000px\" height=\"1000px\">\n  <defs>\n    <pattern id=\"pattern\" patternUnits=\"userSpaceOnUse\" width=\"" + d + "\" height=\"" + d + "\">\n      <circle cx=\"" + c + "\" cy=\"" + c + "\" r=\"" + r + "\" fill=\"red\"/>\n    </pattern>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#pattern)\"/>\n</svg>"));
    x$.setAttribute('width', "1000px");
    x$.setAttribute('height', "1000px");
    angle = n.direction || 0;
    dx = Math.cos(angle * Math.PI / 180) * 0.3;
    dy = Math.sin(angle * Math.PI / 180) * 0.3;
    ref$ = [0.5 - dx, 0.5 - dy], x1 = ref$[0], y1 = ref$[1];
    ref$ = [0.5 + dx, 0.5 + dy], x2 = ref$[0], y2 = ref$[1];
    y$ = node.querySelector('linearGradient');
    y$.setAttribute('x1', x1);
    y$.setAttribute('y1', y1);
    y$.setAttribute('x2', x2);
    y$.setAttribute('y2', y2);
    return y$;
  },
  dom: function(config){}
};
if (typeof module != 'undefined' && module !== null) {
  module.exports = ret;
}