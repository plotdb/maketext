// Generated by LiveScript 1.3.0
var ret;
ret = {
  name: 'Extrusion',
  desc: '',
  tags: '',
  slug: '',
  init: function(){},
  edit: {
    fill: {
      name: 'fill',
      type: 'color',
      'default': '#ccc'
    },
    extrusion: {
      name: 'extrusion',
      type: 'color',
      'default': '#444'
    },
    offset: {
      name: 'offset',
      type: 'number',
      'default': 8,
      min: 0,
      max: 16
    }
  },
  watch: function(n, o, node){
    var x$, conv, i;
    if (n.fill !== o.fill) {
      node.querySelector('text').setAttribute('fill', n.fill);
    }
    if (n.extrusion != null) {
      node.querySelector('feFlood').setAttribute('flood-color', n.extrusion);
    }
    if (n.offset) {
      x$ = node.querySelector('feOffset');
      x$.setAttribute('dx', n.offset * 0.5);
      x$.setAttribute('dy', n.offset * 0.5);
      conv = node.querySelector('feConvolveMatrix');
      conv.setAttribute('order', n.offset + "," + n.offset);
      return conv.setAttribute('kernelMatrix', (function(){
        var i$, to$, results$ = [];
        for (i$ = 0, to$ = n.offset; i$ < to$; ++i$) {
          i = i$;
          results$.push(i);
        }
        return results$;
      }()).map(function(i){
        var j;
        return (function(){
          var i$, to$, results$ = [];
          for (i$ = 0, to$ = n.offset; i$ < to$; ++i$) {
            j = i$;
            results$.push(j);
          }
          return results$;
        }()).map(function(j){
          if (i === j) {
            return 1;
          } else {
            return 0;
          }
        }).join(' ');
      }).join(' '));
    }
  },
  dom: function(config){}
};
if (typeof module != 'undefined' && module !== null) {
  module.exports = ret;
}